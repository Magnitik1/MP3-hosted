[{"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\index.js":"1","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\App.js":"2","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\state.js":"3","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\theme.js":"4","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\allsongs.js":"5","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\allplaylists.js":"6","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\foundSongs.js":"7","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\mainplaylists.js":"8","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Sidebar.jsx":"9","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Home\\Home.jsx":"10","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Home\\MySettings\\MySettings.jsx":"11","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Library.jsx":"12","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Search\\Search.jsx":"13","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Playlists\\Listen\\Listen.jsx":"14","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Navigation.jsx":"15","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Playlists\\Playlists.jsx":"16","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\SongNow\\SongNow.jsx":"17","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Model\\Modal.jsx":"18","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Search\\Found\\Found.jsx":"19","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Model\\SelectSongs\\SelectSongs.jsx":"20"},{"size":679,"mtime":1684686424267,"results":"21","hashOfConfig":"22"},{"size":1660,"mtime":1684686424013,"results":"23","hashOfConfig":"22"},{"size":43,"mtime":1684686424053,"results":"24","hashOfConfig":"22"},{"size":98,"mtime":1684686424054,"results":"25","hashOfConfig":"22"},{"size":4488,"mtime":1684686424052,"results":"26","hashOfConfig":"22"},{"size":1267,"mtime":1684686424051,"results":"27","hashOfConfig":"22"},{"size":55,"mtime":1684686424052,"results":"28","hashOfConfig":"22"},{"size":2296,"mtime":1684686424053,"results":"29","hashOfConfig":"22"},{"size":463,"mtime":1684686424028,"results":"30","hashOfConfig":"22"},{"size":4208,"mtime":1684686424018,"results":"31","hashOfConfig":"22"},{"size":1083,"mtime":1684686424018,"results":"32","hashOfConfig":"22"},{"size":1103,"mtime":1684686424020,"results":"33","hashOfConfig":"22"},{"size":1273,"mtime":1684686424026,"results":"34","hashOfConfig":"22"},{"size":1481,"mtime":1684686424022,"results":"35","hashOfConfig":"22"},{"size":1076,"mtime":1684686424024,"results":"36","hashOfConfig":"22"},{"size":1575,"mtime":1684686424023,"results":"37","hashOfConfig":"22"},{"size":1857,"mtime":1684686424028,"results":"38","hashOfConfig":"22"},{"size":2465,"mtime":1684686424020,"results":"39","hashOfConfig":"22"},{"size":550,"mtime":1684686424025,"results":"40","hashOfConfig":"22"},{"size":768,"mtime":1684686424021,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dqqswy",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\index.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\App.js",["114","115","116","117","118"],[],"import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\r\nimport Home from \"./Components/Sidebar/Navigation/Home/Home\";\r\nimport Search from './Components/Sidebar/Navigation/Search/Search';\r\nimport Library from './Components/Sidebar/Navigation/Library/Library';\r\nimport MySettings from './Components/Sidebar/Navigation/Home/MySettings/MySettings';\r\nimport Listen from './Components/Sidebar/Navigation/Library/Playlists/Listen/Listen';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\n\r\nfunction App(props) {\r\n  let [getsong, setsong] = useState(0);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n    <Sidebar getsong={getsong} setsong={setsong}/>\r\n      <header className=\"App-header\">\r\n      <a className='bg'></a>\r\n      <a className='gradient'></a>\r\n        <Routes>\r\n            <Route path='/Search' element={<Search theme={props.theme} AllSongs={props.AllSongs} foundSongs={props.foundSongs} getsong={getsong} setsong={setsong}/>}/>\r\n            <Route path='/' element={<Home theme={props.theme}/>}/>\r\n            <Route path='/Library' element={<Library theme={props.theme} AllSongs={props.AllSongs} allplaylists={props.allplaylists} state={props.state}/>}/>\r\n            <Route path='/MySettings' element={<MySettings theme={props.theme}/>}/>\r\n            <Route path='/Listen' element={<Listen AllSongs={props.AllSongs} theme={props.theme} allplaylists={props.allplaylists} mainplaylists={props.mainplaylists} getsong={getsong} setsong={setsong}/>}/>\r\n        </Routes>\r\n      </header>\r\n    </div>\r\n    </BrowserRouter> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\state.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\theme.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\allsongs.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\allplaylists.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\foundSongs.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\redux\\mainplaylists.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Sidebar.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Home\\Home.jsx",["119","120","121","122","123","124"],[],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport settingsPic from \"../../../pics/mysettings.svg\";\r\nimport acoustic from \"../../../pics/acoustic.jpg\";\r\nimport electro from \"../../../pics/electro.webp\";\r\nimport romantic from \"../../../pics/romantic.png\";\r\nimport hiphop from \"../../../pics/hiphop.jpg\";\r\nimport music from \"../../../pics/music.webp\";\r\nimport rock from \"../../../pics/rock.jpg\";\r\nimport classic from \"../../../pics/leclassic.jpg\";\r\nimport pop from \"../../../pics/pop.jpg\";\r\nimport queen from \"../../../pics/queen.webp\";\r\nimport nickelback from \"../../../pics/nickelback.jpg\";\r\nimport skillet from \"../../../pics/skillet.jpg\";\r\n\r\nfunction Home(props) {\r\n  let box = [];\r\n  let hr = \"\";\r\n  box.push(\r\n    <Link to=\"/Library\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n      <div className=\"boxes\">Library</div>\r\n    </Link>\r\n  );\r\n  for (let i = 1; i < 6; i++) {\r\n    let text;\r\n    let pic = \"\";\r\n    switch (i) {\r\n      case 1:\r\n        text = \"Acoustic Hits\";\r\n        hr=\"Acoustic\";\r\n        pic = acoustic;\r\n        break;\r\n      case 2:\r\n        text = \"Electronic\";\r\n        pic = electro;\r\n        hr=\"Electronic\";\r\n        break;\r\n      case 3:\r\n        text = \"Romantic\";\r\n        pic = romantic;\r\n        hr=\"Romantic\";\r\n        break;\r\n      case 4:\r\n        text = \"Hip-Hop\";\r\n        hr=\"Hip-Hop\";\r\n        pic = hiphop;\r\n        break;\r\n      case 5:\r\n        text = \"Global Top\";\r\n        hr=\"Global\";\r\n        pic = music;\r\n        break;\r\n    }\r\n    box.push(\r\n      <Link to={\"/Listen#\"+hr+\"/static\"} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n      <div\r\n        className=\"boxes\"\r\n        style={{\r\n          backgroundImage: \"url(\" + pic + \")\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}>\r\n        <span className=\"darckBG\">{text}</span>\r\n      </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  let bigbox1 = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    let text;\r\n    let pic = \"\";\r\n    switch (i) {\r\n      case 0:\r\n        text = \"Rock Hits\";\r\n        hr = \"Rock\";\r\n        pic = rock;\r\n        break;\r\n      case 1:\r\n        text = \"Pop Hits\";\r\n        hr = \"Pop\";\r\n        pic = pop;\r\n        break;\r\n      case 2:\r\n        text = \"Classical\";\r\n        hr = \"Classical\"\r\n        pic = classic;\r\n        break;\r\n    }\r\n    bigbox1.push(\r\n      <Link to={\"/Listen#\"+hr+\"/static\"} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n      <div\r\n        className=\"bigboxes\"\r\n        style={{\r\n          backgroundImage: \"url(\" + pic + \")\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}>\r\n        <span className=\"darckBG\">{text}</span>\r\n      </div>\r\n      </Link>\r\n    );\r\n  }\r\n  let bigbox2 = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    let text;\r\n    let pic = \"\";\r\n    switch (i) {\r\n      case 0:\r\n        text = \"Queen, My darkest Days\";\r\n        hr=\"Queen\";\r\n        pic = queen;\r\n        break;\r\n      case 1:\r\n        text = \"Nickelback, Shinedown\";\r\n        pic = nickelback;\r\n        hr=\"Nickelback\";\r\n        break;\r\n      case 2:\r\n        text = \"Skillet, Three Days Grace\";\r\n        pic = skillet;\r\n        hr=\"Skillet\";\r\n        break;\r\n    }\r\n    bigbox2.push(\r\n      <Link to={\"/Listen#\"+hr+\"/static\"} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n      <div\r\n        className=\"bigboxes\"\r\n        style={{\r\n          backgroundImage: \"url(\" + pic + \")\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}>\r\n        <span className=\"darckBG\">{text}</span>\r\n      </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className={props.theme[props.theme[0]]+\" Theme\"}>\r\n        <Link to=\"/MySettings\" style={{ textDecoration: \"none\"}} className=\"settingsButton\">\r\n          <img src={settingsPic} alt=\"set\"/>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <a className=\"text\">Good morning</a>\r\n        <div className=\"wrapper\">{box.map((e) => e)}</div>\r\n        <a className=\"text\">Shows to try</a>\r\n        <div className=\"wrapper\">{bigbox1.map((e) => e)}</div>\r\n        <a className=\"text\">Your Top Mixes</a>\r\n        <div className=\"wrapper\">{bigbox2.map((e) => e)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Home\\MySettings\\MySettings.jsx",["125","126"],[],"import React, { useState } from \"react\";\r\nimport \"./mySettings.css\";\r\nimport back from \"../../../../pics/arrowleft.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MySettings(props) {\r\n  const [mytheme, setTheme] = useState(props.theme[props.theme[0]]+\" Theme\");\r\n  return (\r\n    <div className=\"MySettings\">\r\n      <div className={props.theme[props.theme[0]]+\" Theme\"}>\r\n        <Link to=\"/\">\r\n          <img src={back} alt=\"back\" className=\"back\" />\r\n        </Link>\r\n        <a className={\"text\"}>\r\n          <span className=\"mid1\">&nbsp;&nbsp;Settings</span>\r\n        </a>\r\n        <button\r\n          onClick={() => {\r\n            props.theme[0]++;\r\n            if(props.theme[0]>=props.theme.length)props.theme[0]=1;\r\n            setTheme(props.theme[props.theme[0]]+\" Theme\");\r\n          }}\r\n          className={\"themeButton \"+props.theme[props.theme[0]>=props.theme.length-1?1:props.theme[0]+1]}>\r\n          {props.theme[props.theme[0]>=props.theme.length-1?1:props.theme[0]+1]}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySettings;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Library.jsx",["127"],[],"import React, { useState } from \"react\";\r\nimport \"./library.css\";\r\nimport PlayLists from \"./Playlists/Playlists\";\r\nimport Modal from \"./Model/Modal\";\r\nfunction Library(props) {\r\n  const [isModal, setModal] = useState(false);\r\n\r\n  let PlyListsElements = props.allplaylists.map((Element) => (\r\n    <PlayLists name={Element.name} picture={Element.picture} id={Element.id} songs={Element.songs} \r\n    AllSongs={props.AllSongs} allplaylists={props.allplaylists} theme={props.theme}/>\r\n  ));\r\n  return (\r\n    <div className=\"Library\">\r\n      <div className={props.theme[props.theme[0]]+\" Theme\"}>\r\n      <a className=\"text\">Your Libraries</a>\r\n        {PlyListsElements}\r\n      <button className=\"AddNew\" onClick={() => setModal(true)}>\r\n        +\r\n      </button>\r\n     \r\n      <Modal isVisible={isModal}\r\n                footer={<button className=\"button1\">Create Playlist</button>}\r\n                onClose={() => setModal(false)} \r\n                AllSongs={props.AllSongs} allplaylists={props.allplaylists} theme={props.theme} state={props.state}/>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Search\\Search.jsx",["128","129"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./search.css\";\r\nimport searchPic from \"../../../pics/search2.svg\";\r\nimport Found from \"./Found/Found\";\r\n\r\nconst Search = (props) => {\r\n  let [songs, setSongs] = useState();\r\n  const allSongs = [];\r\n\r\n  let search = (e) => {\r\n    e.preventDefault();\r\n    let text1 = e.target[0].value.toLowerCase().trim()\r\n    if (text1 === \"\") return;\r\n    for (let i = 0; i < props.AllSongs.length; i++) {\r\n      if (props.AllSongs[i].name.toLowerCase().includes(text1) ||\r\n        props.AllSongs[i].author.toLowerCase().includes(text1)) {\r\n        allSongs.push(props.AllSongs[i]);\r\n      }\r\n    }\r\n      setSongs(allSongs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <div className={props.theme[props.theme[0]]+\" Theme\"}>\r\n      <form onSubmit={search}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"uname\"\r\n          className=\"sLine\"\r\n          placeholder=\"Song, Artist\"></input>\r\n        <button>\r\n          <img src={searchPic} alt=\"search\" className=\"sPic\" />\r\n        </button>\r\n      </form>\r\n      <a className=\"text\">Search</a>\r\n      <Found songs={songs} AllSongs={props.AllSongs} getsong={props.getsong} setsong={props.setsong}/>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Playlists\\Listen\\Listen.jsx",["130","131"],[],"import React, { useState } from \"react\";\r\nimport \"./listen.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport back from \"../../../../../pics/arrowleft.svg\";\r\nimport {getplaylist, setplaylist} from \"../../../../../redux/allplaylists.js\";\r\n\r\nconst Listen = (props) => {\r\n  let link = window.location.href;\r\n  link = link.slice(link.indexOf(\"#\") + 1);\r\n  while (link.includes(\"%20\")) {\r\n    link = link.replace(\"%20\", \" \");\r\n  }\r\n  let playlist;\r\n  if (props.allplaylists.find((e) => e.name === link)) {\r\n    playlist = props.allplaylists.find((e) => e.name === link);\r\n    setplaylist(playlist.songs, playlist.id)\r\n  } else {\r\n    playlist = props.mainplaylists.find((e) => e.name === link);\r\n    setplaylist(playlist.songs, playlist.id)\r\n  }  \r\n  let prap = playlist.songs[0]===-1\r\n  let qw = prap?props.AllSongs:playlist.songs;\r\n  let str = qw.map((el) => {\r\n      let e = prap?el:props.AllSongs[el];\r\n      return (\r\n        <div className=\"choosesong\" onClick={()=>{props.setsong(e.id)}}>\r\n          {e.name} - {e.author}\r\n          <br />\r\n          <img src={e.url} alt=\"pic\" style={{borderRadius:\"10px\", height:\"80px\", width:\"80px\" }} />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className={props.theme[props.theme[0]] + \" Theme Listen\"}>\r\n      <Link to=\"/\">\r\n        <img src={back} alt=\"back\" className=\"back\" />\r\n      </Link>\r\n      <br />\r\n      <div>{str}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listen;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Navigation.jsx",["132","133","134"],[],"import React from \"react\";\r\nimport \"./navigation.css\";\r\nimport homePic from \"../../pics/navPics/home.svg\";\r\nimport searchPic from \"../../pics/navPics/search.svg\";\r\nimport libraryPic from \"../../pics/navPics/library.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"Navigation\">\r\n      <ul className=\"nav\">\r\n        <Link to=\"/\" style={{textDecoration: 'none'}}>\r\n          <li >\r\n            <img src={homePic} alt=\"home\" />\r\n             <a className=\"al\">&nbsp;&nbsp;Home</a>\r\n          </li>\r\n        </Link>\r\n        <Link to=\"/Search\" style={{textDecoration: 'none'}}>\r\n          <li>\r\n            <img src={searchPic} alt=\"search\" />\r\n            <a className=\"al\">&nbsp;&nbsp;Search</a>\r\n          </li>\r\n        </Link>\r\n        <Link to=\"/Library\" style={{textDecoration: 'none'}}>\r\n          <li>\r\n            <img src={libraryPic} alt=\"library\" />\r\n            <a className=\"al\">&nbsp;&nbsp;Library</a>\r\n          </li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Playlists\\Playlists.jsx",["135","136","137"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./playlists.css\";\r\nimport mydel from \"../../../../pics/bin.svg\";\r\nimport Listen from \"./Listen/Listen\";\r\nconst Playlists = (props) => {\r\n  const [listVisibility, SetlistVisibility] = useState(true);\r\n  const myAltsrc = () => {\r\n    <img\r\n      src=\"https://images.macrumors.com/t/hi1_a2IdFGRGMsJ0x31SdD_IcRk=/1600x/article-new/2018/05/apple-music-note.jpg\"\r\n      className=\"favbg\"\r\n      alt=\"d&d\"\r\n    />;\r\n  };\r\n  const Remove = () => {\r\n    if (props.id == 1) return;\r\n    SetlistVisibility((visible) => !visible);\r\n    for (\r\n      let i = props.allplaylists.findIndex((e) => e.id === props.id);\r\n      i < props.allplaylists.length - 1;\r\n      i++\r\n    ) {\r\n      props.allplaylists[i] = props.allplaylists[i + 1];\r\n    }\r\n    props.allplaylists.pop();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlists\">\r\n      {listVisibility && (\r\n        <div style={{width:\"100%\"}}>\r\n          <Link to={\"/Listen#\"+props.name} style={{ textDecoration: \"none\" }} className=\"mygreen\">\r\n            <li>\r\n              <img src={props.picture} className=\"favbg\" alt={myAltsrc} />\r\n              <a className={props.theme[props.theme[0]]+\" ptext\"} style={{background:\"rgba(0,0,0,0)\"}}>\r\n                &nbsp;&nbsp;&nbsp;{props.name}\r\n              </a>\r\n            </li>\r\n          </Link>\r\n          <Link className=\"delbutton\">\r\n            <img onClick={Remove} src={mydel} alt=\"Delete\" />\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\SongNow\\SongNow.jsx",["138","139","140"],[],"import React, { useState } from \"react\";\r\nimport \"./songNow.css\";\r\nimport AllSongs from \"../../redux/allsongs\";\r\nimport { setplaylist, getplaylist } from \"../../redux/allplaylists\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SongNow(props) {\r\n  let next=()=>{\r\n    let gp = getplaylist();\r\n          if (gp[0] === -1) {\r\n            gp = AllSongs.map((e) => e.id);\r\n          }\r\n          let temp = gp.indexOf(props.getsong) + 1;\r\n          if (gp.length <= temp) {\r\n            temp = 0;\r\n          }\r\n          props.setsong(gp[temp]);\r\n  }\r\n  return (\r\n    <div className=\"SongNow\">\r\n      <br />\r\n      <br />\r\n      <img src={AllSongs[props.getsong].url} className=\"picture\" />\r\n      <p className=\"titles\">{AllSongs[props.getsong].author}</p>\r\n      <p className=\"titles\">{AllSongs[props.getsong].name}</p>\r\n      <audio\r\n        src={AllSongs[props.getsong].previewURL}\r\n        controls\r\n        autoplay=\"true\"\r\n        style={{ width: \"98%\", minWidth: \"220px\" }}\r\n        onEnded={next}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          let array = getplaylist();\r\n          for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n          }\r\n          setplaylist(array);\r\n          next();\r\n        }}\r\n        className=\"shuffle\"\r\n      />\r\n      <button\r\n      className=\"prev\"\r\n        onClick={() => {\r\n          let gp = getplaylist();\r\n          let temp = gp.indexOf(props.getsong) - 1;\r\n          if (0 > temp) {\r\n            temp = gp.length - 1;\r\n          }\r\n          props.setsong(gp[temp]);\r\n        }}/>\r\n      <button\r\n      className=\"next\"\r\n        onClick={() => {\r\n          next();\r\n        }}/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongNow;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Model\\Modal.jsx",["141","142","143"],[],"import React from 'react';\r\nimport './modal.css';\r\nimport SelectSongs from './SelectSongs/SelectSongs';\r\n\r\nconst Modal = (props) => {\r\n    const keydownHandler = ({ key }) => {\r\n        switch (key) {\r\n            case 'Escape':\r\n                props.state.length=1;\r\n                props.onClose();\r\n                break;\r\n            default:\r\n                \r\n        }\r\n    };\r\n    let newPlaylistElement = React.createRef();\r\n\r\n    let createPlaylist = () => {\r\n        if((newPlaylistElement.current.value).trim()==\"\"||(newPlaylistElement.current.value).includes('/')){\r\n            return;\r\n        }\r\n        let mysongs=[];\r\n        for(let i=0;i<props.state.length;i++){\r\n            if(!isNaN(props.state[i])){\r\n                mysongs.push(props.state[i]);\r\n            }\r\n        }\r\n        let temp ={\r\n        id: props.allplaylists.length+1,\r\n        name:(newPlaylistElement.current.value).trim(),\r\n        picture:props.AllSongs.find(e=>e.id==mysongs[0]).url,\r\n        songs:mysongs,\r\n    };   \r\n        if(temp.name==\"\"||mysongs.length<1||props.allplaylists.find(e=>e.name===temp.name)||temp.name.includes(\"%20\")){props.onClose();props.state.length=1;return;}\r\n        props.allplaylists.push(temp);\r\n        props.onClose();\r\n        props.state.length=1;\r\n        \r\n      };\r\n\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener('keydown', keydownHandler);\r\n        return () => document.removeEventListener('keydown', keydownHandler);\r\n    });\r\n    \r\n    let AllSongs2=props.AllSongs.map(e=><SelectSongs name={e.name} id={e.id} state={props.state}/>);\r\n\r\n    return !props.isVisible ? null : (\r\n        <div className=\"modal\" onClick={props.onClose}>\r\n            <div className=\"modal-dialog\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal-header\">\r\n                    <span className=\"modal-close\" onClick={props.onClose}>\r\n                        &times;\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-content\">\r\n                        <input className=\"listName\" type=\"text\" ref={newPlaylistElement} placeholder='Playlist Name' />\r\n                    </div>\r\n                    {AllSongs2}\r\n                </div>\r\n                {props.footer && <div className=\"modal-footer\" onClick={createPlaylist}>{props.footer}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Search\\Found\\Found.jsx",["144","145"],[],"import React,{useState} from \"react\";\r\nimport \"./found.css\";\r\n\r\nconst Found = (props) => {\r\n  let temp=\"\";\r\n  if(props.songs!==undefined)\r\n  temp = props.songs.map(e=>\r\n  <div className=\"choosesong\" onClick={()=>{props.setsong(e.id)}}>\r\n  <br />\r\n  {e.name} - {e.author}\r\n  <br />\r\n  <img src={e.url} style={{borderRadius:\"10px\", height:\"80px\", width:\"80px\" }} />\r\n  <br />\r\n  <br />\r\n</div>)\r\n  return (\r\n    <div className=\"Found\">\r\n        <div style={{marginTop:\"80px\", width:\"120%\"}}>{temp}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Found;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\MP3-hosted\\src\\Components\\Sidebar\\Navigation\\Library\\Model\\SelectSongs\\SelectSongs.jsx",["146","147"],[],"import React from \"react\";\r\nimport \"./selectSongs.css\";\r\n\r\nconst SelectSongs = (props) => {\r\n  let choose = React.createRef();\r\n  let i = 0;\r\n  let add = () => {\r\n    if (choose.current.value == \"on\" && i % 2 == 0) {\r\n      if (!props.state.includes(props.id)) {\r\n        i++;\r\n        props.state.push(props.id);}      \r\n      \r\n    } else {\r\n      i++;\r\n      for (let i = props.state.findIndex(e=>e===props.id); i < props.state.length - 1; i++) {\r\n        props.state[i] = props.state[i + 1];\r\n      }\r\n      props.state.pop();\r\n    }\r\n  };\r\n  return (\r\n    <label className=\"container\">\r\n      {props.name}\r\n      <input type=\"checkbox\" ref={choose} onClick={add} />\r\n      <span className=\"checkmark\"></span>\r\n    </label>\r\n  );\r\n};\r\nexport default SelectSongs;\r\n",{"ruleId":"148","severity":1,"message":"149","line":9,"column":40,"nodeType":"150","messageId":"151","endLine":9,"endColumn":44},{"ruleId":"152","severity":1,"message":"153","line":19,"column":7,"nodeType":"154","endLine":19,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":19,"column":7,"nodeType":"154","endLine":19,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":20,"column":7,"nodeType":"154","endLine":20,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":20,"column":7,"nodeType":"154","endLine":20,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":28,"column":5,"nodeType":"159","messageId":"160","endLine":54,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":73,"column":5,"nodeType":"159","messageId":"160","endLine":89,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":107,"column":5,"nodeType":"159","messageId":"160","endLine":123,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":146,"column":9,"nodeType":"154","endLine":146,"endColumn":29},{"ruleId":"155","severity":1,"message":"156","line":148,"column":9,"nodeType":"154","endLine":148,"endColumn":29},{"ruleId":"155","severity":1,"message":"156","line":150,"column":9,"nodeType":"154","endLine":150,"endColumn":29},{"ruleId":"148","severity":1,"message":"161","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":14,"column":9,"nodeType":"154","endLine":14,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":15,"column":7,"nodeType":"154","endLine":15,"endColumn":27},{"ruleId":"148","severity":1,"message":"162","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":36,"column":7,"nodeType":"154","endLine":36,"endColumn":27},{"ruleId":"148","severity":1,"message":"163","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"164","line":5,"column":9,"nodeType":"150","messageId":"151","endLine":5,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":15,"column":14,"nodeType":"154","endLine":15,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":21,"column":13,"nodeType":"154","endLine":21,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":27,"column":13,"nodeType":"154","endLine":27,"endColumn":31},{"ruleId":"148","severity":1,"message":"165","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":16,"column":18,"nodeType":"168","messageId":"169","endLine":16,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":35,"column":15,"nodeType":"154","endLine":35,"endColumn":104},{"ruleId":"148","severity":1,"message":"163","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":23,"column":7,"nodeType":"154","endLine":23,"endColumn":68},{"ruleId":"166","severity":1,"message":"167","line":19,"column":53,"nodeType":"168","messageId":"169","endLine":19,"endColumn":55},{"ruleId":"166","severity":1,"message":"167","line":31,"column":44,"nodeType":"168","messageId":"169","endLine":31,"endColumn":46},{"ruleId":"166","severity":1,"message":"167","line":34,"column":21,"nodeType":"168","messageId":"169","endLine":34,"endColumn":23},{"ruleId":"148","severity":1,"message":"163","line":1,"column":15,"nodeType":"150","messageId":"151","endLine":1,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":12,"column":3,"nodeType":"154","endLine":12,"endColumn":82},{"ruleId":"166","severity":1,"message":"167","line":8,"column":30,"nodeType":"168","messageId":"169","endLine":8,"endColumn":32},{"ruleId":"166","severity":1,"message":"167","line":8,"column":47,"nodeType":"168","messageId":"169","endLine":8,"endColumn":49},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'mytheme' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'getplaylist' is defined but never used.","'Listen' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]